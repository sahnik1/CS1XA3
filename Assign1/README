BQuestion 1:

A Variable "output" is used to store the value after grep is used to find the string "up-to-date" in the output of "git status". If the repo is up to date, then the wordcount of "output" is 1, and therefore the if statemtn tests this.

Question 2:

The command "git diff" outputs the uncommited changes and therefore ">" (stdout) is used to append this info to "changes.log".

Question 3:

The command "find" is used and the part "-name "*" " means it doesn't care about the filenames. The "-name" part is to use the string "#TODO" to find files via the grep command. The "--exclude=" parts are to make sure the command doesn't use the the script file and the files made by the script itself. Then, ">" is used to append the info from find to todo.log.

Question 4:

A for loop is initialized which checks for any file with the extension ".hs" (haskell files) using the "*" operator. This for loop then contains the "ghc -fno-code" followed by the file checked in each loop step with a "2>" (sterror) to append any error info to "error.log".

Unique Feature 1:

Uses the inbuilt "lscpu" command with grep to check if the output contains the word "GenuineIntel". Then an if then statement is used to determine and display the message if the user's computer has an Intel or Amd Processor.

Unique Feature 2:

Uses the inbuilt "zip" function to make a zip archive with up to 2 files given by the user followed by a name for the archive taken from the user. After this action, the user is asked if they would like to remove the original file(s) that they just archived.

Unique Feature 3:

Uses the inbuilt "cp" function to make a more intuitive way for users to copy files from one directory to another. In this interface, the user input the 2 directories to which these actions are being done to. If the directory to which the files are being copied does not exist, it is created with the copied files.
